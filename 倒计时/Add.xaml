<Page
    x:Class="倒计时.Add"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:倒计时"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:control="using:倒计时.Controls"
    mc:Ignorable="d"
    Background="{ThemeResource SystemControlAcrylicWindowBrush}">

    <Page.Resources>
        <SolidColorBrush x:FieldModifier="public" x:Name="TC" x:Key="ThemeColor"  Color="CornflowerBlue"/>
        <StaticResource x:Key="ContentDialogBorderBrush" ResourceKey="ThemeColor" />
        <StaticResource x:Key="SliderThumbBackground" ResourceKey="ThemeColor" />
        <Style TargetType="ContentDialog">
            <Setter Property="Foreground" Value="{ThemeResource ThemeColor}" />
            <Setter Property="Background" Value="{ThemeResource ContentDialogBackground}" />
            <Setter Property="BorderBrush" Value="{ThemeResource ThemeColor}" />
            <Setter Property="IsTabStop" Value="False" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ContentDialog">
                        <Border x:Name="Container">

                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="DialogShowingStates">

                                    <VisualStateGroup.Transitions>
                                        <VisualTransition To="DialogHidden">

                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LayoutRoot" Storyboard.TargetProperty="Visibility">
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LayoutRoot" Storyboard.TargetProperty="IsHitTestVisible">
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="False" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ScaleTransform" Storyboard.TargetProperty="ScaleX">
                                                    <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="1.0" />
                                                    <SplineDoubleKeyFrame KeyTime="0:0:0.5" KeySpline="0.1,0.9 0.2,1.0" Value="1.05" />
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ScaleTransform" Storyboard.TargetProperty="ScaleY">
                                                    <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="1.0" />
                                                    <SplineDoubleKeyFrame KeyTime="0:0:0.5" KeySpline="0.1,0.9 0.2,1.0" Value="1.05" />
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="LayoutRoot" Storyboard.TargetProperty="Opacity">
                                                    <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="1.0" />
                                                    <LinearDoubleKeyFrame KeyTime="0:0:0.083" Value="0.0" />
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualTransition>
                                        <VisualTransition To="DialogShowing">

                                            <Storyboard>
                                                <ObjectAnimationUsingKeyFrames Storyboard.TargetName="LayoutRoot" Storyboard.TargetProperty="Visibility">
                                                    <DiscreteObjectKeyFrame KeyTime="0:0:0" Value="Visible" />
                                                </ObjectAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ScaleTransform" Storyboard.TargetProperty="ScaleX">
                                                    <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="1.05" />
                                                    <SplineDoubleKeyFrame KeyTime="0:0:0.5" KeySpline="0.1,0.9 0.2,1.0" Value="1.0" />
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="ScaleTransform" Storyboard.TargetProperty="ScaleY">
                                                    <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="1.05" />
                                                    <SplineDoubleKeyFrame KeyTime="0:0:0.5" KeySpline="0.1,0.9 0.2,1.0" Value="1.0" />
                                                </DoubleAnimationUsingKeyFrames>
                                                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="LayoutRoot" Storyboard.TargetProperty="Opacity">
                                                    <DiscreteDoubleKeyFrame KeyTime="0:0:0" Value="0.0" />
                                                    <LinearDoubleKeyFrame KeyTime="0:0:0.167" Value="1.0" />
                                                </DoubleAnimationUsingKeyFrames>
                                            </Storyboard>
                                        </VisualTransition>
                                    </VisualStateGroup.Transitions>
                                    <VisualState x:Name="DialogHidden" />
                                    <VisualState x:Name="DialogShowing">
                                        <VisualState.Setters>
                                            <Setter Target="LayoutRoot.Visibility" Value="Visible" />
                                            <Setter Target="BackgroundElement.TabFocusNavigation" Value="Cycle" />
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="DialogShowingWithoutSmokeLayer">
                                        <VisualState.Setters>
                                            <Setter Target="LayoutRoot.Visibility" Value="Visible" />
                                            <Setter Target="LayoutRoot.Background" Value="{x:Null}" />
                                        </VisualState.Setters>
                                    </VisualState>

                                </VisualStateGroup>
                                <VisualStateGroup x:Name="DialogSizingStates">
                                    <VisualState x:Name="DefaultDialogSizing" />
                                    <VisualState x:Name="FullDialogSizing">
                                        <VisualState.Setters>
                                            <Setter Target="BackgroundElement.VerticalAlignment" Value="Stretch" />
                                        </VisualState.Setters>
                                    </VisualState>

                                </VisualStateGroup>
                                <VisualStateGroup x:Name="ButtonsVisibilityStates">
                                    <VisualState x:Name="AllVisible" />
                                    <VisualState x:Name="NoneVisible">
                                        <VisualState.Setters>
                                            <Setter Target="CommandSpace.Visibility" Value="Collapsed" />
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="PrimaryVisible">
                                        <VisualState.Setters>
                                            <Setter Target="PrimaryButton.(Grid.Column)" Value="2" />
                                            <Setter Target="PrimaryButton.(Grid.ColumnSpan)" Value="2" />
                                            <Setter Target="PrimaryButton.Margin" Value="2,0,0,0" />
                                            <Setter Target="PrimaryButton.CornerRadius" Value="5"/>
                                            <Setter Target="SecondaryButton.Visibility" Value="Collapsed" />
                                            <Setter Target="CloseButton.Visibility" Value="Collapsed" />
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="SecondaryVisible">
                                        <VisualState.Setters>
                                            <Setter Target="SecondaryButton.(Grid.Column)" Value="2" />
                                            <Setter Target="SecondaryButton.(Grid.ColumnSpan)" Value="2" />
                                            <Setter Target="SecondaryButton.Margin" Value="2,0,0,0" />
                                            <Setter Target="PrimaryButton.Visibility" Value="Collapsed" />
                                            <Setter Target="CloseButton.Visibility" Value="Collapsed" />
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="CloseVisible">
                                        <VisualState.Setters>
                                            <Setter Target="CloseButton.(Grid.Column)" Value="2" />
                                            <Setter Target="CloseButton.(Grid.ColumnSpan)" Value="2" />
                                            <Setter Target="CloseButton.Margin" Value="2,0,0,0" />
                                            <Setter Target="PrimaryButton.Visibility" Value="Collapsed" />
                                            <Setter Target="SecondaryButton.Visibility" Value="Collapsed" />
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="PrimaryAndSecondaryVisible">
                                        <VisualState.Setters>
                                            <Setter Target="PrimaryButton.(Grid.ColumnSpan)" Value="2" />
                                            <Setter Target="PrimaryButton.CornerRadius" Value="5"/>
                                            <Setter Target="SecondaryButton.(Grid.Column)" Value="2" />
                                            <Setter Target="SecondaryButton.(Grid.ColumnSpan)" Value="2" />
                                            <Setter Target="SecondaryButton.Margin" Value="2,0,0,0" />
                                            <Setter Target="CloseButton.Visibility" Value="Collapsed" />
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="PrimaryAndCloseVisible">
                                        <VisualState.Setters>
                                            <Setter Target="PrimaryButton.(Grid.ColumnSpan)" Value="2" />
                                            <Setter Target="PrimaryButton.CornerRadius" Value="12"/>
                                            <Setter Target="CloseButton.(Grid.Column)" Value="2" />
                                            <Setter Target="CloseButton.(Grid.ColumnSpan)" Value="2" />
                                            <Setter Target="CloseButton.CornerRadius" Value="12"/>
                                            <Setter Target="CloseButton.Margin" Value="2,0,0,0" />
                                            <Setter Target="SecondaryButton.Visibility" Value="Collapsed" />
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="SecondaryAndCloseVisible">
                                        <VisualState.Setters>
                                            <Setter Target="SecondaryButton.(Grid.Column)" Value="0" />
                                            <Setter Target="SecondaryButton.(Grid.ColumnSpan)" Value="2" />
                                            <Setter Target="SecondaryButton.Margin" Value="0,0,2,0" />
                                            <Setter Target="CloseButton.(Grid.Column)" Value="2" />
                                            <Setter Target="CloseButton.(Grid.ColumnSpan)" Value="2" />
                                            <Setter Target="CloseButton.Margin" Value="2,0,0,0" />
                                            <Setter Target="PrimaryButton.Visibility" Value="Collapsed" />
                                        </VisualState.Setters>
                                    </VisualState>

                                </VisualStateGroup>
                                <VisualStateGroup x:Name="DefaultButtonStates">
                                    <VisualState x:Name="NoDefaultButton" />
                                    <VisualState x:Name="PrimaryAsDefaultButton">
                                        <VisualState.Setters>
                                            <Setter Target="PrimaryButton.Style" Value="{StaticResource AccentButtonStyle}" />
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="SecondaryAsDefaultButton">
                                        <VisualState.Setters>
                                            <Setter Target="SecondaryButton.Style" Value="{StaticResource AccentButtonStyle}" />
                                        </VisualState.Setters>
                                    </VisualState>
                                    <VisualState x:Name="CloseAsDefaultButton">
                                        <VisualState.Setters>
                                            <Setter Target="CloseButton.Style" Value="{StaticResource AccentButtonStyle}" />
                                        </VisualState.Setters>
                                    </VisualState>

                                </VisualStateGroup>

                                <VisualStateGroup x:Name="DialogBorderStates">
                                    <VisualState x:Name="NoBorder" />
                                    <VisualState x:Name="AccentColorBorder">
                                        <VisualState.Setters>
                                            <Setter Target="BackgroundElement.BorderBrush" Value="{ThemeResource SystemControlForegroundAccentBrush}" />
                                        </VisualState.Setters>
                                    </VisualState>

                                </VisualStateGroup>

                            </VisualStateManager.VisualStateGroups>
                            <Grid x:Name="LayoutRoot" Visibility="Collapsed" Background="{ThemeResource SystemControlPageBackgroundMediumAltMediumBrush}">
                                <Border x:Name="BackgroundElement"
                                Background="{TemplateBinding Background}"
                                FlowDirection="{TemplateBinding FlowDirection}"
                                BorderThickness="{ThemeResource ContentDialogBorderWidth}"
                                BorderBrush="{TemplateBinding BorderBrush}"
                                CornerRadius="{TemplateBinding CornerRadius}"
                                MinWidth="{ThemeResource ContentDialogMinWidth}"
                                MaxWidth="{ThemeResource ContentDialogMaxWidth}"
                                MinHeight="{ThemeResource ContentDialogMinHeight}"
                                MaxHeight="{ThemeResource ContentDialogMaxHeight}"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                RenderTransformOrigin="0.5,0.5">
                                    <Border.RenderTransform>
                                        <ScaleTransform x:Name="ScaleTransform" />
                                    </Border.RenderTransform>
                                    <Grid x:Name="DialogSpace" Padding="{ThemeResource ContentDialogPadding}">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="*" />
                                            <RowDefinition Height="Auto" />
                                        </Grid.RowDefinitions>
                                        <ScrollViewer x:Name="ContentScrollViewer"
                                        HorizontalScrollBarVisibility="Disabled"
                                        VerticalScrollBarVisibility="Disabled"
                                        ZoomMode="Disabled"
                                        Margin="{ThemeResource ContentDialogContentScrollViewerMargin}"
                                        IsTabStop="False">
                                            <Grid>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition Height="Auto" />
                                                    <RowDefinition Height="*" />
                                                </Grid.RowDefinitions>
                                                <ContentControl x:Name="Title"
                                                Margin="{ThemeResource ContentDialogTitleMargin}"
                                                Content="{TemplateBinding Title}"
                                                ContentTemplate="{TemplateBinding TitleTemplate}"
                                                FontSize="20"
                                                FontFamily="XamlAutoFontFamily"
                                                FontWeight="Normal"
                                                Foreground="{TemplateBinding Foreground}"
                                                HorizontalAlignment="Left"
                                                VerticalAlignment="Top"
                                                IsTabStop="False">
                                                    <ContentControl.Template>
                                                        <ControlTemplate TargetType="ContentControl">
                                                            <ContentPresenter Content="{TemplateBinding Content}"
                                                            MaxLines="2"
                                                            TextWrapping="Wrap"
                                                            ContentTemplate="{TemplateBinding ContentTemplate}"
                                                            Margin="{TemplateBinding Padding}"
                                                            ContentTransitions="{TemplateBinding ContentTransitions}"
                                                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}" />
                                                        </ControlTemplate>
                                                    </ContentControl.Template>
                                                </ContentControl>
                                                <ContentPresenter x:Name="Content"
                                                ContentTemplate="{TemplateBinding ContentTemplate}"
                                                Content="{TemplateBinding Content}"
                                                FontSize="{ThemeResource ControlContentThemeFontSize}"
                                                FontFamily="{ThemeResource ContentControlThemeFontFamily}"
                                                Margin="{ThemeResource ContentDialogContentMargin}"
                                                Foreground="{TemplateBinding Foreground}"
                                                Grid.Row="1"
                                                TextWrapping="Wrap" />
                                            </Grid>
                                        </ScrollViewer>
                                        <Grid x:Name="CommandSpace"
                                        Grid.Row="1"
                                        HorizontalAlignment="Stretch"
                                        VerticalAlignment="Bottom"
                                        XYFocusKeyboardNavigation="Enabled"
                                        Margin="{ThemeResource ContentDialogCommandSpaceMargin}">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition />
                                                <ColumnDefinition Width="0.5*" />
                                                <ColumnDefinition Width="0.5*" />
                                                <ColumnDefinition />
                                            </Grid.ColumnDefinitions>
                                            <Button x:Name="PrimaryButton"
                                            Content="{TemplateBinding PrimaryButtonText}"
                                            IsEnabled="{TemplateBinding IsPrimaryButtonEnabled}"
                                            Style="{TemplateBinding PrimaryButtonStyle}"
                                                    Background="{ThemeResource ThemeColor}"
                                            ElementSoundMode="FocusOnly"
                                            HorizontalAlignment="Stretch"
                                            VerticalAlignment="Stretch"
                                            Margin="0,0,2,0"
                                            Grid.Column="0" />
                                            <Button x:Name="SecondaryButton"
                                            Content="{TemplateBinding SecondaryButtonText}"
                                            IsEnabled="{TemplateBinding IsSecondaryButtonEnabled}"
                                            Style="{TemplateBinding SecondaryButtonStyle}"
                                            ElementSoundMode="FocusOnly"
                                            HorizontalAlignment="Stretch"
                                            VerticalAlignment="Stretch"
                                            Margin="2,0,2,0"
                                            Grid.Column="1"
                                            Grid.ColumnSpan="2" />
                                            <Button x:Name="CloseButton"
                                            Content="{TemplateBinding CloseButtonText}"
                                            Style="{TemplateBinding CloseButtonStyle}"
                                            ElementSoundMode="FocusOnly"
                                            HorizontalAlignment="Stretch"
                                            VerticalAlignment="Stretch"
                                            Margin="2,0,0,0"
                                            Grid.Column="3" />
                                        </Grid>

                                    </Grid>
                                </Border>

                            </Grid>
                        </Border>

                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        
    </Page.Resources>

    <ScrollViewer VerticalScrollBarVisibility="Auto">
        <Grid x:Name="AddPageGird" x:FieldModifier="Public">
            <Grid.RowDefinitions>
                <RowDefinition />
                <RowDefinition />
                <RowDefinition />
                <RowDefinition />
                <RowDefinition />
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition />
            </Grid.ColumnDefinitions>
            <Button x:Name="RefreshBtn" Content="❔ 无法选择日期？点我！" Style="{StaticResource ButtonRevealStyle}" Foreground="{x:Bind TC}" Grid.Column="1" BorderThickness="0" HorizontalAlignment="Right" CornerRadius="15" Background="Transparent" Margin="0,50,10,50" Click="RefreshBtn_Click"/>
            <TextBlock Text="创建一个日程吧！"
                   x:Name="TipTB"
                   Grid.Row="0"
                   Grid.Column="0"
                   Grid.ColumnSpan="2"
                   HorizontalAlignment="Center"
                   VerticalAlignment="Bottom"
                   FontSize="48"
                   FontFamily="FZShuTi"
                   Foreground="{x:Bind TC}" />
            <TextBox x:Name="AddEvent"
                 PlaceholderText="日程名称"
                 Grid.Row="1"
                 Grid.Column="0"
                 Grid.ColumnSpan="2"
                 CornerRadius="8"
                 BorderBrush="{x:Bind TC}"
                 HorizontalAlignment="Center"
                 VerticalAlignment="Bottom"
                 Height="Auto" Width="400" 
                 BorderThickness="1"/>
            <StackPanel Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="2" Orientation="Horizontal" HorizontalAlignment="Center">
                <CalendarDatePicker Grid.Row="2"
                            Grid.Column="0"
                            HorizontalAlignment="Right"
                            Margin="20,20,0,20"
                            x:Name="Add_Picker"
                            BorderThickness="1"
                                    IsGroupLabelVisible="True"
                            Foreground="{x:Bind TC}"
                            BorderBrush="{x:Bind TC}"
                            DateFormat="{}{year.full}/{month.integer}/{day.integer}"
                            CornerRadius="8"
                            PlaceholderText="选择一个日期"
                            DateChanged="Add_Picker_DateChanged"
                            >
                    <CalendarDatePicker.CalendarViewStyle>
                        <Style TargetType="CalendarView" BasedOn="{StaticResource CalendarViewRevealStyle}">
                            <Setter Property="CalendarViewDayItemStyle">
                                <Setter.Value>
                                    <Style TargetType="CalendarViewDayItem">
                                        <Setter Property="Padding" Value="0, 0, 0, 18" />
                                        <Setter Property="MinWidth" Value="44" />
                                        <Setter Property="MinHeight" Value="48" />
                                        <Setter Property="Margin" Value="1" />
                                        <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}" />
                                        <Setter Property="FocusVisualMargin" Value="-2" />
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="CalendarViewDayItem">
                                                    <!-- For CalendarViewDayItem, TextBlock visual is created and handled by code and we can't see it from the style. -->
                                                    <!-- CCalendarViewBaseItemChrome creates and appends a TextBlock in the visual after the ControlTemplate is applied -->
                                                    <!-- VSM needs a container and that's why Grid is added. But we don't need the rendering of Grid so We set width to 0 -->
                                                    <Grid x:Name="Root">

                                                        <VisualStateManager.VisualStateGroups>
                                                            <VisualStateGroup x:Name="CommonStates">
                                                                <VisualState x:Name="Normal" />

                                                                <VisualState x:Name="PointerOver">
                                                                    <VisualState.Setters>
                                                                        <Setter Target="Root.(RevealBrush.State)" Value="PointerOver" />
                                                                    </VisualState.Setters>
                                                                </VisualState>

                                                                <VisualState x:Name="Pressed">
                                                                    <VisualState.Setters>
                                                                        <Setter Target="Root.(RevealBrush.State)" Value="Pressed" />
                                                                    </VisualState.Setters>
                                                                </VisualState>
                                                            </VisualStateGroup>

                                                        </VisualStateManager.VisualStateGroups>
                                                        <control:CalendarViewDayLunarItem Date="{TemplateBinding Date}" Foreground="DarkGray" Margin="0,0,0,-14" />
                                                    </Grid>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </CalendarDatePicker.CalendarViewStyle>
                </CalendarDatePicker>
                <TextBlock Text="或" VerticalAlignment="Center" Margin="10,0,0,0"/>
                <Button x:Name="DateChooseBtn" Content="&#x1F4A1;" Height="35" Width="35" ToolTipService.ToolTip="试一试选择多少天后的日子" Foreground="Orange" FontSize="18" FontFamily="Segoe UI Emoji" BorderThickness="0" Background="Transparent" Margin="2,10,20,10" CornerRadius="100" Click="DateChooseBtn_Click"/>
                <StackPanel Grid.Row="2" Grid.Column="1" Margin="20" Orientation="Horizontal">
                    <Button Content="背景选项"
                x:Name="BgsButton"
                HorizontalAlignment="Left"
                CornerRadius="15"
                Background="{x:Bind TC}"
                Foreground="White"
                Click="BgsButton_Click"
                />
                    <Ellipse x:Name="MyEllipse" Height="20" Width="20" Margin="10" Fill="Transparent" StrokeThickness="0"/>
                </StackPanel>
            </StackPanel>
            
            <StackPanel Grid.Row="3" Grid.ColumnSpan="2">
                <Button x:Name="TipButton"
                Content="添加备注"
                Grid.Row="3"
                Grid.ColumnSpan="2"
                HorizontalAlignment="Center"
                Foreground="White"
                Background="{x:Bind TC}"
                CornerRadius="15"
                Click="TipButton_Click"/>
                <TextBlock x:Name="TTB" Foreground="Gray"  FontSize="15" Width="200" TextWrapping="Wrap" HorizontalAlignment="Center" TextAlignment="Center"/>
            </StackPanel>
            <Button Content="确认添加"
                x:Name="AddButton"
                Grid.Row="4"
                Grid.Column="0"
                Grid.ColumnSpan="2"
                CornerRadius="15"
                HorizontalAlignment="Center"
                BorderThickness="3"
                BorderBrush="Azure"
                Foreground="White"
                Background="{x:Bind TC}"
                Height="50"
                Width="100"
                Click="Button_Click"/>

            <ContentDialog x:Name="BgsDialog"
                   Title="背景设置"
                   PrimaryButtonText="确定"
                   CloseButtonText="取消"
                   DefaultButton="Primary"
                   CornerRadius="10"
                   Background="White"
                   PrimaryButtonClick="BgsDialog_PrimaryButtonClick">
                <ScrollViewer>
                    <StackPanel VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                        <TextBlock Text="建议选择较为温和的颜色" Foreground="DarkSlateGray" Margin="5,0,0,0" TextWrapping="Wrap"/>
                            <ColorPicker x:Name="MyColorPicker"
                             Margin="5"
                             IsColorSliderVisible="True"
                             IsMoreButtonVisible="True"
                             IsColorChannelTextInputVisible="True"
                             IsHexInputVisible="True"
                             IsAlphaEnabled="False"
                             IsAlphaSliderVisible="True"
                             IsAlphaTextInputVisible="True"
                             />
                    <Button Content="选择自带颜色" Foreground="White" Background="{x:Bind TC}" CornerRadius="6">
                        <Button.Flyout>
                            <Flyout x:Name="DefaltColorFlyout">
                                    <StackPanel Orientation="Vertical" Width="240">
                                        <TextBlock Text="自带颜色" TextWrapping="Wrap" FontWeight="Bold" Margin="0,0,0,2" Opacity="0.7"/>
                                        <GridView x:Name="ColorGridView" ItemsSource="{x:Bind ViewModel.ThemeColorDatas}" IsItemClickEnabled="True" ItemClick="ColorGridView_ItemClick">
                                            <GridView.ItemTemplate>
                                                <DataTemplate x:DataType="local:ThemeColorData">
                                                    <StackPanel>
                                                        <Rectangle Fill="{x:Bind themeColor}" Height="40" Width="40" ToolTipService.ToolTip="{x:Bind colorName}"/>
                                                    </StackPanel>
                                                </DataTemplate>
                                            </GridView.ItemTemplate>
                                        </GridView>
                                        <TextBlock Text="Tip：如果您有不错的配色方案，欢迎邮箱联系我~" TextWrapping="Wrap" Foreground="Gray"/>
                                    </StackPanel>
                            </Flyout>
                        </Button.Flyout>
                    </Button>
                    <Slider AutomationProperties.Name="Slider with ticks"
                        x:Name="MySlider"
                            Foreground="{x:Bind TC}"
                        Header="不透明度（推荐40~80，0为全透明）"
                        Margin="5"
                        Value="80"
                        Maximum="100"
                        TickFrequency="10"
                        TickPlacement="Outside" />
                        
                    
                </StackPanel>
    </ScrollViewer>
    </ContentDialog>
            <ContentDialog x:Name="TipDialog"
                       Title="添加备注"
                       PrimaryButtonText="确定"
                       CloseButtonText="取消"
                       DefaultButton="Primary"
                       CornerRadius="10"
                       Background="White"
                       PrimaryButtonClick="TipDialog_PrimaryButtonClick"
                       CloseButtonClick="TipDialog_CloseButtonClick">
                <TextBox x:Name="TipTextbox" Margin="5" TextWrapping="Wrap" BorderThickness="2" PlaceholderText ="备注可留空" CornerRadius="8"/>
            </ContentDialog>
            <ContentDialog x:Name="DateDialog"
                       Title="选择多少天后的日子"
                       PrimaryButtonText="确定"
                       CloseButtonText="取消"
                       DefaultButton="Primary"
                       CornerRadius="10"
                           Foreground="{x:Bind TC}"
                       Background="White"
                       PrimaryButtonClick="DateDialog_PrimaryButtonClick"
                           CloseButtonClick="DateDialog_CloseButtonClick">
                <StackPanel>
                    <TextBlock x:Name="TodayDate" Text="今天是……" Foreground="DimGray" FontSize="16"/>
                    <StackPanel Orientation="Horizontal" Margin="0,5,0,5">
                        <TextBox x:Name="DaysTextBox" MaxLength="5" InputScope="Number" Margin="0,0,5,0" CornerRadius="5" FontSize="15" TextAlignment="Center" BorderBrush="{x:Bind TC}" TextChanged="DaysTextBox_TextChanged"/>
                        <TextBlock x:Name="DayCountTextBlock" Text="天后" VerticalAlignment="Center" Width="Auto" FontSize="20" Foreground="SlateGray"/>
                    </StackPanel>
                </StackPanel>
            </ContentDialog>
        </Grid>
    </ScrollViewer>
</Page>
